---
version: 2.1

orbs:
  python-api: twdps/python-api@dev:<<pipeline.git.revision>>
  op: twdps/onepassword@3.0.0

globals:
  - &context orb-publishing

# commands:

#   set-environment:
#     steps:
#       - op/env:
#           env-file: op.env

  # echo-message:
  #   parameters:
  #     msg:
  #       type: string
  #   steps:
  #     - run:
  #         name: echo msg
  #         command: echo "<< parameters.msg >>"

  # check-artifacts:
  #   parameters:
  #     filename:
  #       description: name of artifact file to confirm
  #       type: string
  #   steps:
  #     - run:
  #         name: validate build log artifact
  #         command: |
  #           #!/usr/bin/env bash
  #           set -eo pipefail

  #           echo "validate file:<< parameters.filename >> exists"
  #           if [ -f "<< parameters.filename >>" ]; then
  #             echo "<< parameters.filename >> contents"
  #             cat "<< parameters.filename >>"
  #           else
  #             echo "File << parameters.filename >> does not exist."
  #             exit 1
  #           fi

jobs:

  test static analysis commands:
    docker:
      - image: twdps/circleci-python-builder:stable
    steps:
      - checkout
      - setup_remote_docker
      - python-api/packages:
          package-manager: pip
          install-dev: true
          pip-requirements-filename: test/custom_requirements_filename.txt
          pip-requirements-filename-dev: test/custom_dev_requirements_filename.txt
      - run:
          name: confirm installed packages from custom requirements and dev requirements files
          command: |
            set -exo pipefail
            pip list | grep "fastapi"
            pip list | grep "uvicorn"
      - python-api/lint:
          lint-path: ""
          pylint-options: "--version > pylint-outfile"
      - run:
          name: confirm pylint installation and parameters
          command: |
            set -exo pipefail
            cat pylint-outfile | grep "pylint"
      - python-api/hadolint:
          dockerfile: ""
          hadolint-additional-args: "--version > hadolint-outfile"
      - run:
          name: confirm hadolint installation and parameters
          command: |
            set -exo pipefail
            cat hadolint-outfile | grep "Haskell"

workflows:

  integration tests:
    jobs:
      # - test static analysis commands

      - python-api/statis-analysis:
          shell: /bin/bash -eo pipefail
          executor-image: twdps/circleci-python-builder:stable
          executor-resource-class: large
          package-manager: pip
          install-dev: true
          pip-requirements-filename: test/requirements.txt
          pip-requirements-filename-dev: tests/requirements-dev.txt
          lint-path: api
          hadolint: false
          coverage: true
          after-checkout:
            - run:
                name: after-checkout message
                command: echo "after-checkout"
          after-analysis:
            - run:
                name: after-analysis message
                command: echo "after-analysis"
