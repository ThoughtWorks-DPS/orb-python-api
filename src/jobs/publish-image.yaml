# src/jobs/publish-image.yaml

description: |
  Tag registry image with semantic version for release, sign and generate sbom.  

executor:
  name: circleci-python-builder
  executor-image: << parameters.executor-image >>
  resource-class: << parameters.executor-resource-class >>
shell: << parameters.shell >>

parameters:

  shell:
    description: default shell invocation. Override to support different shells or tools like secrethub.io
    type: string
    default: /bin/bash -eo pipefail

  executor-image:
    description: Specify executor image used by job.
    type: string
    default: twdps/circleci-python-builder:stable

  executor-resource-class:
    description: Specify executor resource class.
    type: enum
    enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
    default: medium

  registry-login:
    description: username for reigstry access
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: password for registry access
    type: env_var_name
    default: DOCKER_PASSWORD

  registry:
    description: Name of registry
    type: string
    default: docker.io

  image:
    description: Name of image
    type: string

  pull-tag:
    description: Value for dev build tag
    type: string
    default: dev.${CIRCLE_SHA1:0:7}

  publish-tag:
    description: Value for published release version
    type: string
    default: $CIRCLE_TAG

  tag-annotation:
    description: Additional text appendc to semantic version tag
    type: string
    default: ""

  attestations:
    description: attestations to include in signature
    type: string
    default: ""

  sign-key:
    description: path to private key used to sign image
    type: string
    default: cosign.key

  verify-key:
    description: path to public key used to verify signature
    type: string
    default: cosign.pub

  cosign-password:
    description: signing key passphrase
    type: env_var_name
    default: COSIGN_PASSWORD

  sbom-filename:
    description: name of generate sbom file
    type: string
    default: sbom.spdx

  before-push:
    description: Optional steps to run before building the docker image
    type: steps
    default: []

  after-push:
    description: Optional steps to run after publishing the docker image
    type: steps
    default: []

steps:
  - checkout
  - setup_remote_docker
  - confirm-registry:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
  - pull:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.pull-tag >>
  - sign: 
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.pull-tag >>
      attestations: << parameters.attestations >>
      sign-key: << parameters.sign-key >>
      verify-key: << parameters.verify-key >>
      cosign-password: << parameters.cosign-password >>
  - sbom:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
      sbom-filename: << parameters.sbom-filename >>
  - tag:
      registry: << parameters.registry >>
      image: << parameters.image >>
      current-tag: << parameters.pull-tag >>
      new-tag: << parameters.publish-tag >><< parameters.tag-annotation >>
  - when:
      name: Run before_push lifecycle hook steps.
      condition: << parameters.before-push >>
      steps: << parameters.before-push >>
  - push:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.publish-tag >><< parameters.tag-annotation >>
  - when:
      name: Run after_push lifecycle hook steps.
      condition: << parameters.after-push >>
      steps: << parameters.after-push >>
