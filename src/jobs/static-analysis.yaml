# src/jobs/static-analysis.yaml

description: |
  Perform static analysis of python code, with optional before and after custom steps.

executor:
  name: circleci-python-builder
  executor-image: << parameters.executor-image >>
  resource-class: << parameters.executor-resource-class >>
shell: << parameters.shell >>

parameters:

  shell:
    description: Shell launch configuration. Can override to support process level tool options (1password, teller).
    type: string
    default: /bin/bash -eo pipefail

  executor-image:
    description: Specify executor image used by job.
    type: string
    default: twdps/circleci-python-builder:stable

  executor-resource-class:
    description: Specify executor resource class.
    type: enum
    enum: [small, medium, medium+, large, xlarge, 2xlarge, 2xlarge+]
    default: medium

  package-manager:
    description: (Optional) Support for pip or pipenv package managers.
    type: enum
    enum: ["pipenv", "pip", "none"]
    default: "none"

  install-dev:
    description: (Optional) Install dev packages. Requires setting package-manager.
    type: boolean
    default: false

  pip-requirements-filename:
    description: (Optional) Name of pip requirements file.
    type: string
    default: requirements.txt

  pip-requirements-filename-dev:
    description: (Optional) Name of pip development requirements file.
    type: string
    default: requirements-dev.txt

  lint-path:
    description: Path used for pylint. Set to none to skip.
    type: string
    default: "."

  pylint-options:
    description: (Optional) Additional pylint command line options.
    type: string
    default: ""

  hadolint-dockerfile:
    description: (Optional) Run hadolint by defualt. Set False to skip.
    type: boolean
    default: true

  unit-test:
    description: (Optional) Pytest unit testing. Set False to skip.
    type: boolean
    default: true

  coverage:
    description: (Optional) Calculate unit test coverage. Requires unit-test.
    type: boolean
    default: true

  report-coverage:
    description: (Optional) Report test coverage.
    type: enum
    enum: ["codeclimate", "none"]
    default: "none"

  cis-docker-image-scan:
    description: (Optioanl) Perform CIS Docker Benchmark Section 4 assessment using conftest. Can customize to apply any rego policy.
    type: boolean
    default: false

  dockerfile:
    description: Name of dockerfile.
    type: string
    default: Dockerfile

  after-checkout:
    description: (Optional) steps to run after checking out the code.
    type: steps
    default: []

  after-analysis:
    description: (Optional) Steps to run after static code analysis.
    type: steps
    default: []

steps:
  - checkout
  - setup_remote_docker
  - when:
      name: Run after_checkout lifecycle hook steps
      condition: << parameters.after-checkout >>
      steps: << parameters.after-checkout >>
  - packages:
      package-manager: << parameters.package-manager >>
      install-dev: << parameters.install-dev >>
      pip-requirements-filename: << parameters.pip-requirements-filename >>
      pip-requirements-filename-dev: << parameters.pip-requirements-filename-dev >>
  - lint:
      lint-path: << parameters.lint-path >>
      pylint-options: << parameters.pylint-options >>
  - hado-lint:
      hadolint-dockerfile: << parameters.hadolint-dockerfile >>
      dockerfile: << parameters.dockerfile >>
  - unit-testing:
      unit-test: << parameters.unit-test >>
      coverage: << parameters.coverage >>
      report-coverage: << parameters.report-coverage >>
  - cis-scan:
      cis-docker-image-scan: << parameters.cis-docker-image-scan >>
      dockerfile: << parameters.dockerfile >>
  - when:
      name: Run after after analysis lifecycle hook steps
      condition: << parameters.after-analysis >>
      steps: << parameters.after-analysis >>
