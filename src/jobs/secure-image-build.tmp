# src/jobs/secure-image-build.yaml

description: |
  Secure oci compatible image build from dockerfile.

  Currently supports Snyk for cve scanning. Use after-build steps to implement other tools.

executor:
  name: machine-image
  executor-machine: << parameters.executor-machine >>
  resource-class: << parameters.executor-resource-class >>
shell: << parameters.shell >>

parameters:

  shell:
    description: default shell invocation. Override to support different shells or tools like secrethub.io
    type: string
    default: /bin/sh -eo pipefail

  executor-machine:
    description: specify machine executor
    type: string
    default: ubuntu-2204:2023.04.2

  executor-resource-class:
    description: specify executor resource class. Default is medium.
    type: enum
    enum: [medium, large, xlarge, 2xlarge]
    default: medium

  python-version:
    description: version of python to install. 3 and above.
    type: string
    default: ""
  setuptools-version:
    type: string
    default: "68.0.0"
  wheel-version:
    type: string
    default: "0.40.0"
  pipenv-version:
    type: string
    default: "2023.6.18"
  pylint-version:
    type: string
    default: "2.17.4"
  pytest-version:
    type: string
    default: "7.4.0"
  coverage-version:
    type: string
    default: "7.2.7"
  invoke-version:
    type: string
    default: "2.1.3"
  requests-version:
    type: string
    default: "2.31.0"
  jinja2-version:
    type: string
    default: "3.1.2"

  registry:
    description: Name of registry
    type: string
    default: docker.io

  registry-login:
    description: username for reigstry access
    type: env_var_name
    default: DOCKER_LOGIN

  registry-password:
    description: password for registry access
    type: env_var_name
    default: DOCKER_PASSWORD

  aws-ecr:
    description: use aws elastic container registry
    type: boolean
    default: false

  dockerfile:
    description: Name of dockerfile
    type: string
    default: Dockerfile

  path:
    description: Path to the directory containing your Dockerfile and build context
    type: string
    default: .

  image:
    description: Name of image
    type: string

  tag:
    description: Value for dev build tag
    type: string
    default: dev.${CIRCLE_SHA1:0:7}

  tag-annotation:
    description: Additional text prepended to semantic version tag
    type: string
    default: ""

  package-manager:
    description: Currently supports pip and pipenv
    type: enum
    enum: ["pipenv", "pip", "none"]
    default: "none"

  install-dev:
    description: Install dev packages also. Not necessary if installed on executor
    type: boolean
    default: false

  image-cve-scan:
    description: perform snyk.io docker cve scan
    type: boolean
    default: false

  severity-threshold:
    description: snyk test reporting threshold
    type: string
    default: "low"

  snyk-organization:
    description: Trigger Scan results related to repository associated with organization created at snyk.io
    type: string
    default: ""

  snyk-token:
    description: snyk.io api-token
    type: env_var_name
    default: SNYK_TOKEN

  skip-base-image:
    description: optionally, skip performing cve scan of base image
    type: boolean
    default: false

  health-url:
    description: health or liveness
    type: string
    default: ""

  port-definition:
    description: docker run -p parameters
    type: string
    default: ""

  startup-delay:
    description: time to wait for service to startup and liveness endpoint to be available
    type: integer
    default: 3

  extra-build-args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ""

  docker-run-arguments:
    description: additional Docker Run arguements
    type: string
    default: ""

  before-build:
    description: Optional steps to run before building the docker image
    type: steps
    default: []

  after-build:
    description: Optional steps to run after building the docker image
    type: steps
    default: []

  after-push:
    description: Optional steps to run after publishing the docker image
    type: steps
    default: []

steps:
  - checkout
  - configure-machine:
      python-version: << parameters.python-version >>
      setuptools-version: << parameters.setuptools-version >>
      wheel-version: << parameters.wheel-version >>
      pipenv-version: << parameters.pipenv-version >>
      pylint-version: << parameters.pylint-version >>
      pytest-version: << parameters.pytest-version >>
      coverage-version: << parameters.coverage-version >>
      invoke-version: << parameters.invoke-version >>
      requests-version: << parameters.requests-version >>
      jinja2-version: << parameters.jinja2-version >>
  - packages:
      package-manager: << parameters.package-manager >>
      install-dev: << parameters.install-dev >>
  - when:
      name: Run before_build lifecycle hook steps.
      condition: << parameters.before-build >>
      steps: << parameters.before-build >>
  - confirm-registry:
      registry: << parameters.registry >>
      registry-login: << parameters.registry-login >>
      registry-password: << parameters.registry-password >>
      aws-ecr: << parameters.aws-ecr >>
  - build:
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
      registry: << parameters.registry >>
      extra-build-args: << parameters.extra-build-args >>
  - when:
      name: Perform snyk cve scan
      condition: << parameters.image-cve-scan >>
      requires:
        - build
      steps:
        - cve-scan:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            dockerfile: << parameters.dockerfile >>
            severity-threshold: << parameters.severity-threshold >>
            snyk-organization: << parameters.snyk-organization >>
            snyk-token: << parameters.snyk-token >>
            skip-base-image: << parameters.skip-base-image >>
  - when:
      name: perform bats container smoke (liveness) test
      condition: << parameters.health-url >>
      requires:
        - build
      steps:
        - liveness:
            registry: << parameters.registry >>
            image: << parameters.image >>
            tag: << parameters.tag-annotation >><< parameters.tag >>
            port-definition: << parameters.port-definition >>
            health-url: << parameters.health-url>>
            startup-delay: << parameters.startup-delay >>
            docker-run-arguments: << parameters.docker-run-arguments >>
  - when:
      name: Run after_build lifecycle hook steps.
      condition: << parameters.after-build >>
      steps: << parameters.after-build >>
  - push:
      registry: << parameters.registry >>
      image: << parameters.image >>
      tag: << parameters.tag-annotation >><< parameters.tag >>
  - when:
      name: Run after_push lifecycle hook steps.
      condition: << parameters.after-push >>
      steps: << parameters.after-push >>
