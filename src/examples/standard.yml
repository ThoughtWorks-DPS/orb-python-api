# src/examples/standard.yml
# yamllint disable rule:line-length
---

description: Standard usage of the twdps/terraform orb workflow jobs

usage:
  version: 2.1

  orbs:
    python: twdps/python-api@1.0.0
    cosign: twdps/cosign@0.1.0

  # ==== global pipeline parameters

  globals:
    - &context twdps-core-labs-team
    - &shell op run --env-file op.env -- /bin/bash -eo pipefail
    - &executor-image twdps/circleci-python-builder:4.0.0
    - &package-manager pip
    - &image hello-restful
    - &registry ghcr.io/thoughtworks-dps

  on-push-main: &on-push-main
    branches:
      only: /main/
    tags:
      ignore: /.*/

  on-tag-main: &on-tag-main
    branches:
      ignore: /.*/
    tags:
      only: /.*/

  commands:

    set-environment:
      parameters:
        cluster:
          description: target cluster
          type: string
          default: ""
        tag:
          description: image to deploy
          type: string
          default: dev.${CIRCLE_SHA1:0:7}
      steps:
        - run:
            name: set environment
            command: |
              op inject -i op.env -o $BASH_ENV
              echo "export API_VERSION=<< parameters.tag >>" >> $BASH_ENV
              source $BASH_ENV
              op inject -i tpl/cosign.key.tpl -o cosign.key
              op inject -i tpl/cosign.pub.tpl -o cosign.pub
        - when:
            condition: << parameters.cluster >>
            steps:
              - run:
                  name: set ~/.kube/config
                  command: |
                    mkdir -p ~/.kube
                    ENV=<< parameters.cluster >> op inject -i tpl/kubeconfig.tpl -o ~/.kube/config

  workflows:
    version: 2

    development-build:
      jobs:
        - python/static-analysis:
            name: static code analysis
            context: *context
            shell: *shell
            image: *executor-image
            package-manager: *package-manager
            install-dev: true
            lint-path: api
            report-coverage: codeclimate
            after-checkout:
              - run:
                  name: set API_VERSION
                  command: |
                    echo "export API_VERSION=dev.${CIRCLE_SHA1:0:7}" >> $BASH_ENV
                    source $BASH_ENV
            filters: *on-push-main
